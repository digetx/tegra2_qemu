/*
 * ARM NVIDIA Tegra2 emulation.
 *
 * Copyright (c) 2014-2015 Dmitry Osipenko <digetx@gmail.com>
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License as published by the
 *  Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 *  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 *  for more details.
 *
 *  You should have received a copy of the GNU General Public License along
 *  with this program; if not, see <http://www.gnu.org/licenses/>.
 */

/* Autogenerated from TRM v02p */

#ifndef TEGRA_ARB_SEMA_H
#define TEGRA_ARB_SEMA_H

#define SMP_GNT_ST_OFFSET 0x0
#define SMP_GNT_ST_RESET  0x00000000
typedef union arb_sema_smp_gnt_st_u {
    struct {
        unsigned int arb_31_arb_0:32;       /* A one in any bit indicates that the processor reading this register as granted status for that bit. A zero indicates semaphore not granted */
    };

    uint32_t reg32;
} arb_sema_smp_gnt_st_t;

#define SMP_GET_OFFSET 0x4
#define SMP_GET_RESET  0x00000000
typedef union arb_sema_smp_get_u {
    struct {
        unsigned int get_31_get_0:32;       /* Writing a one in any bit is a request for that semaphore bit by the processor performing the register write */
    };

    uint32_t reg32;
} arb_sema_smp_get_t;

#define SMP_PUT_OFFSET 0x8
#define SMP_PUT_RESET  0x00000000
typedef union arb_sema_smp_put_u {
    struct {
        unsigned int put_31_put_0:32;       /* Writing a one in any bit will clear the corresponding semaphore bit by the processor performing the register write */
    };

    uint32_t reg32;
} arb_sema_smp_put_t;

#define SMP_REQ_ST_OFFSET 0xC
#define SMP_REQ_ST_RESET  0x00000000
typedef union arb_sema_smp_req_st_u {
    struct {
        unsigned int req_31_req_0:32;       /* A one in any bit indicates a request pending status. The corresponding bits are set when the request for the individual resource is pending. The read by CPU of this register shows the pending status for CPU and a read of this register by AVP (COP) shows the pending status for AVP */
    };

    uint32_t reg32;
} arb_sema_smp_req_st_t;

#endif // TEGRA_ARB_SEMA_H
