/*
 * ARM NVIDIA Tegra2 emulation.
 *
 * Copyright (c) 2015 Dmitry Osipenko <digetx@gmail.com>
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License as published by the
 *  Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 *  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 *  for more details.
 *
 *  You should have received a copy of the GNU General Public License along
 *  with this program; if not, see <http://www.gnu.org/licenses/>.
 */

/* Autogenerated from TRM v02p */

#ifndef TEGRA_RES_SEMA_H
#define TEGRA_RES_SEMA_H

#define RES_SEMA_SHRD_SMP_STA_OFFSET 0x0
#define RES_SEMA_SHRD_SMP_STA_RESET  0x00000000
typedef union res_sema_shrd_smp_sta_u {
    struct {
        unsigned int smp_31_smp_0:32;       /* SMP.27:SMP.24: Available in APB_DMA.REQUESTORS  register */
    };

    uint32_t reg32;
} res_sema_shrd_smp_sta_t;

#define RES_SEMA_SHRD_SMP_SET_OFFSET 0x4

#define RES_SEMA_SHRD_SMP_CLR_OFFSET 0x8

#define RES_SEMA_SHRD_INBOX_OFFSET 0x10
#define RES_SEMA_SHRD_INBOX_RESET  0x00000000
typedef union res_sema_shrd_inbox_u {
    struct {
        unsigned int in_box_data:17;        /* definition) */
        unsigned int in_box_cmd:7;          /* General purpose data bits, suggested usage is for  INBOX command (SW can change definition) */
        unsigned int in_box_stat:4;         /* definition) */
        unsigned int n_a1:1;                /* Reserved = 0 */
        unsigned int tag:1;                 /* Set when the COP writes this register and cleared when CPU writes this register with this bit set to 1 (write one clear). 0 = INVALID 1 = VALID */
        unsigned int ie_ibe:1;              /* Interrupt COP on INBOX Empty (TAG=0) */
        unsigned int ie_ibf:1;              /* Interrupt CPU on INBOX Full (TAG=1) */
    };

    uint32_t reg32;
} res_sema_shrd_inbox_t;

#define RES_SEMA_SHRD_OUTBOX_OFFSET 0x20
#define RES_SEMA_SHRD_OUTBOX_RESET  0x00000000
typedef union res_sema_shrd_outbox_u {
    struct {
        unsigned int out_box_data:17;       /* General purpose Out Box data bits, suggested usage  is for OUTBOX data (SW can change definition) */
        unsigned int out_box_cmd:7;         /* General purpose data bits, suggested usage is for  Out Box OUTBOX command (SW can change definition) */
        unsigned int out_box_stat:4;        /* General purpose data bits, suggested usage is for  Out Box OUTBOX status (SW can change definition) */
        unsigned int n_a1:1;                /* Reserved = 0 */
        unsigned int tag:1;                 /* Set when the CPU writes this register and cleared when the COP writes this register with this bit set to 1 (write one clear). 0 = INVALID 1 = VALID */
        unsigned int ie_obe:1;              /* Interrupt CPU on OUTBOX Empty (TAG=0) */
        unsigned int ie_obf:1;              /* Interrupt COP on OUTBOX Full (TAG=1) */
    };

    uint32_t reg32;
} res_sema_shrd_outbox_t;

#endif // TEGRA_RES_SEMA_H
