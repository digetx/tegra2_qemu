/*
 * ARM NVIDIA Tegra2 emulation.
 *
 * Copyright (c) 2014-2015 Dmitry Osipenko <digetx@gmail.com>
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License as published by the
 *  Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 *  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 *  for more details.
 *
 *  You should have received a copy of the GNU General Public License along
 *  with this program; if not, see <http://www.gnu.org/licenses/>.
 */

/* Autogenerated from TRM v02p */

#ifndef TEGRA_ICTLR_H
#define TEGRA_ICTLR_H

#include "arb_gnt_ictlr.h"

#define TYPE_TEGRA_ICTLR "tegra.ictlr"
#define TEGRA_ICTLR(obj) OBJECT_CHECK(tegra_ictlr, (obj), TYPE_TEGRA_ICTLR)

typedef struct tegra_ictlr_state {
    SysBusDevice parent_obj;

    qemu_irq cpu_irq;
    qemu_irq cpu_fiq;

    qemu_irq cop_irq;
    qemu_irq cop_fiq;

    tegra_arb_gnt_ictlr arb_gnt_ictlr;

    MemoryRegion iomem;
    uint32_t virq_cpu[4];
    uint32_t virq_cop[4];
    uint32_t vfiq_cpu[4];
    uint32_t vfiq_cop[4];
    uint32_t isr[4];
    uint32_t fir[4];
    uint32_t cpu_ier[4];
    uint32_t cpu_iep_class[4];
    uint32_t cop_ier[4];
    uint32_t cop_iep_class[4];
} tegra_ictlr;

void tegra_flow_on_irq(int cpu_id);
int tegra_ictlr_is_irq_pending_on_cpu(int cpu_id);

#define ICTLR_VIRQ_CPU_OFFSET 0x0
#define ICTLR_VIRQ_CPU_RESET  0x00000000

#define ICTLR_VIRQ_COP_OFFSET 0x4
#define ICTLR_VIRQ_COP_RESET  0x00000000

#define ICTLR_VFIQ_CPU_OFFSET 0x8
#define ICTLR_VFIQ_CPU_RESET  0x00000000

#define ICTLR_VFIQ_COP_OFFSET 0xC
#define ICTLR_VFIQ_COP_RESET  0x00000000

#define ICTLR_ISR_OFFSET 0x10
#define ICTLR_ISR_RESET  0x00000000

#define ICTLR_FIR_OFFSET 0x14
#define ICTLR_FIR_RESET  0x00000000

#define ICTLR_FIR_SET_OFFSET 0x18
#define ICTLR_FIR_SET_RESET  0x00000000

#define ICTLR_FIR_CLR_OFFSET 0x1C
#define ICTLR_FIR_CLR_RESET  0x00000000

#define ICTLR_CPU_IER_OFFSET 0x20
#define ICTLR_CPU_IER_RESET  0x00000000

#define ICTLR_CPU_IER_SET_OFFSET 0x24
#define ICTLR_CPU_IER_SET_RESET  0x00000000

#define ICTLR_CPU_IER_CLR_OFFSET 0x28
#define ICTLR_CPU_IER_CLR_RESET  0x00000000

#define ICTLR_CPU_IEP_CLASS_OFFSET 0x2C
#define ICTLR_CPU_IEP_CLASS_RESET  0x00000000

#define ICTLR_COP_IER_OFFSET 0x30
#define ICTLR_COP_IER_RESET  0x00000000

#define ICTLR_COP_IER_SET_OFFSET 0x34
#define ICTLR_COP_IER_SET_RESET  0x00000000

#define ICTLR_COP_IER_CLR_OFFSET 0x38
#define ICTLR_COP_IER_CLR_RESET  0x00000000

#define ICTLR_COP_IEP_CLASS_OFFSET 0x3C
#define ICTLR_COP_IEP_CLASS_RESET  0x00000000

#endif // TEGRA_ICTLR_H
